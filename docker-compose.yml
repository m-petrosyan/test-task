services:
  #PHP Service
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: app
    restart: unless-stopped
    env_file:
      - ./.env
    working_dir: /var/www
    volumes:
      - ./:/var/www
      - ./dockerconf/php/local.ini:/usr/local/etc/php/conf.d/local.ini
    command: >
      bash -c "composer install -o
      && ./artisan key:generate
      && ./artisan migrate --force
      && ./artisan db:seed
      && ./artisan ziggy:generate
      && php-fpm"

    networks:
      - app-network

  vue-app:
    image: node:lts
    user: node
    container_name: vue-app
    restart: unless-stopped
    working_dir: /app
    volumes:
      - ./:/app

    command: >
      bash -c "./wait-for-it.sh -t 0 app:9000
      && npm install
      && npm run dev
      "
    networks:
      - app-network
    depends_on:
      - app

  #Nginx Service
  webserver:
    image: nginx:latest
    container_name: webserver
    restart: unless-stopped
    tty: true
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./:/var/www
      - ./dockerconf/nginx/conf.d/:/etc/nginx/conf.d/
    command: >
      sh -c "true
      && /var/www/wait-for-it.sh -t 0 app:9000 
      && /var/www/wait-for-it.sh -t 0 vue-app:13714
      && nginx -g \"daemon off;\"
      "
    depends_on:
      - app
      - vue-app
    networks:
      - app-network

  db:
    image: 'mysql:latest'
    ports:
      - '${FORWARD_DB_PORT:-3606}:3606'
    container_name: db
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: '${DB_PASSWORD:-secret}'
      MYSQL_DATABASE: '${DB_DATABASE}'
      MYSQL_USER: '${DB_USERNAME}'
      MYSQL_PASSWORD: '${DB_PASSWORD:-secret}'
    volumes:
      - dbdata:/var/lib/mysql
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  dbdata:
    driver: local
